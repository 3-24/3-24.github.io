<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-03-30T01:50:58+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Three Dash Two Four</title><subtitle>수학과 개발을 오가며</subtitle><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><entry><title type="html">Linux Deploy에서 부팅 시 스크립트 자동 실행하기</title><link href="http://localhost:4000/linux/linux-android-startup/" rel="alternate" type="text/html" title="Linux Deploy에서 부팅 시 스크립트 자동 실행하기" /><published>2020-03-28T00:00:00+09:00</published><updated>2020-03-28T00:00:00+09:00</updated><id>http://localhost:4000/linux/linux-android-startup</id><content type="html" xml:base="http://localhost:4000/linux/linux-android-startup/">&lt;p&gt;모바일 안드로이드 기기에서 돌리고 있는 리눅스 서버에서 부팅할 때 돌릴 프로그램을 자동으로 실행하면 번거롭게 부팅할 때마다 SSH로 접속해서 프로그램을 실행하는 과정을 생략할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;init-설정&quot;&gt;init 설정&lt;/h2&gt;

&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;http://localhost:4000/assets/img/linux-init.png&quot; width=&quot;50%&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Linux Deploy에서 속성에 들어가 init을 활성화한다.&lt;/p&gt;

&lt;h2 id=&quot;rclocal에서-돌릴-스크립트-추가&quot;&gt;rc.local에서 돌릴 스크립트 추가&lt;/h2&gt;

&lt;p&gt;SSH로 접속한 서버 쉘을 열어서 다음을 입력한다:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd /etc
$ mkdir rc.local
$ cd rc.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(만약 이미 rc.local이 있다면 그냥 &lt;code class=&quot;highlighter-rouge&quot;&gt;cd /etc/rc.local&lt;/code&gt;)을 하면 된다.&lt;/p&gt;

&lt;p&gt;이제 여기서 부팅할 때 실행할 쉘 스크립트 파일을 만든다. 파일 이름 startScript는 다른 이름으로 해도 무관하다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo vim startScript
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 다음은 나의 예시로, 각자 원하는 목적에 맞춰서 쉘 스크립트를 입력해야 한다. 주의해야 할 점은, startScript는 부팅할 때 루트 계정으로 실행된다는 것이다. 따라서 다른 계정의 &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt;에 설정해놓은 환경 변수 등도 적용이 되지 않는다. 내가 원했던 것은 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/workspace/discordbots/run.sh&lt;/code&gt;를 루트 계정이 아닌, 필요한 환경 변수들이 설정된 &lt;code class=&quot;highlighter-rouge&quot;&gt;youngseok&lt;/code&gt; 계정으로 실행하는 것이었고 이는 다음과 같이 작성된다:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
su youngseok &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bash /home/youngseok/workspace/discordbots/run.sh'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이걸 저장하고 서버를 재시작하면 스크립트에 문제가 없다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;startScript&lt;/code&gt;가 실행되는 것을 확인할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; start
Check file system ... done
Mounting the container:
/ ... done
/proc ... done
/sys ... done
(생략됨)
:: Starting services:
startScript ... done
&amp;lt;&amp;lt;&amp;lt; start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><category term="Linux" /><category term="rc.local" /><summary type="html">모바일 안드로이드 기기에서 돌리고 있는 리눅스 서버에서 부팅할 때 돌릴 프로그램을 자동으로 실행하면 번거롭게 부팅할 때마다 SSH로 접속해서 프로그램을 실행하는 과정을 생략할 수 있다.</summary></entry><entry><title type="html">루팅된 안드로이드 기기를 리눅스 서버로 사용하기</title><link href="http://localhost:4000/linux/linux-android/" rel="alternate" type="text/html" title="루팅된 안드로이드 기기를 리눅스 서버로 사용하기" /><published>2020-03-28T00:00:00+09:00</published><updated>2020-03-28T00:00:00+09:00</updated><id>http://localhost:4000/linux/linux-android</id><content type="html" xml:base="http://localhost:4000/linux/linux-android/">&lt;p&gt;모바일 기기는 전력 소모가 적고 성능도 무난하기 때문에 소형 프로젝트를 돌릴 만한 서버로 적합하다. 루팅된 개인 모바일 안드로이드 기기를 개인 리눅스 서버로 탈바꿈하는 과정을 정리해보았다.&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;안드로이드 기기의 루트 권한&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Busybox 앱 설치(&lt;a href=&quot;https://play.google.com/store/apps/details?id=ru.meefik.busybox&amp;amp;hl=en&quot;&gt;#&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Linux Deploy 앱 설치(&lt;a href=&quot;https://play.google.com/store/apps/details?id=ru.meefik.linuxdeploy&amp;amp;hl=en&quot;&gt;#&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;busybox-설치&quot;&gt;Busybox 설치&lt;/h2&gt;

&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;http://localhost:4000/assets/img/linux_deploy/busybox.png&quot; width=&quot;50%&quot; /&gt;
&lt;figcaption&gt; &lt;br /&gt;Figure 1. Busybox 설치&lt;/figcaption&gt;
&lt;/div&gt;

&lt;p&gt;busybox는 리눅스에서 ls, cp 등 자주 사용하는 명령어들만 모아놓은 상자라고 볼 수 있다. 안드로이드 기본 커널에서 제공하는 명령어가 제한적이기 때문에 서버로 사용할 배포판 리눅스를 설치하기 앞서 busybox를 설치해주어야 한다. 해당 앱을 열고 설치를 누르고 루트 권한을 허용해주면 알아서 설치해준다.&lt;/p&gt;

&lt;h2 id=&quot;linux-deploy-설정&quot;&gt;Linux Deploy 설정&lt;/h2&gt;

&lt;p&gt;deploy 앱을 열어 리눅스를 설치하기 전에 기본적인 설정들을 하자.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;http://localhost:4000/assets/img/linux_deploy/linux_deploy_with_number.png&quot; width=&quot;50%&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;figcaption&gt; Figure 2. Linux Deploy 설정&lt;/figcaption&gt;
&lt;/div&gt;

&lt;p&gt;왼쪽 메뉴(1)를 열어 설정에서&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Wakelock 체크 : 기기를 잠금시켰을 때 안드로이드에서 전력 소모를 막기 위해 앱을 종료하거나 느려지게 만드는 기능을 해제한다. 서버로 사용할 목적이기 때문에 필수.&lt;/li&gt;
  &lt;li&gt;자동시작 체크 : 안정정인 기기면 상관없겠지만, 필자의 기기는 가끔씩 아무 이유없이 재부팅된다. 부팅하고 알아서 리눅스 서버가 켜지도록 하는 설정이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;오른쪽 아래에 속성 아이콘(2)을 눌러서&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;배포에서 리눅스 배포판 선택 : Ubuntu&lt;/li&gt;
  &lt;li&gt;사용자 이름, 비밀번호 설정 : 앞으로 이 글에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;{id}&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;{passwd}&lt;/code&gt;로 대체할 것이다.&lt;/li&gt;
  &lt;li&gt;지역화 : en_US.UTF-8&lt;/li&gt;
  &lt;li&gt;SSH 활성화 : 포트도 설정하고 싶다면 바꿔주자. 이 글에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;{port}&lt;/code&gt;로 대체한다. 기본적으로는 22를 사용한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이제 다시 처음 화면으로 돌아가서 오른쪽 위에 메뉴(3)를 열어 설치를 누르면 된다. 꽤 오래 걸리니 조급해하지 말고 밖에 나가서 밀린 설거지나 하고 돌아오자.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;&amp;lt;deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 끝나면 설치가 완료되었다는 뜻이다.&lt;/p&gt;

&lt;h2 id=&quot;ssh-연결&quot;&gt;SSH 연결&lt;/h2&gt;

&lt;p&gt;이제 START 버튼을 눌러 서버를 가동해주자. 화면 위쪽에 있는 아이피를 확인하고 이를 &lt;code class=&quot;highlighter-rouge&quot;&gt;{ip}&lt;/code&gt;로 부르겠다. &lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.0.4&lt;/code&gt; 이런 형태일 것이다. 위에서 설정한 &lt;code class=&quot;highlighter-rouge&quot;&gt;{id}&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;{passwd}&lt;/code&gt;도 여기서 사용된다.&lt;/p&gt;

&lt;p&gt;Mac이나 Linux같이 shell이 제공된다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh {id}@{ip}&lt;/code&gt;를, ssh 포트를 따로 설정했다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh {id}@{ip} -p {port}&lt;/code&gt;를 shell에서 입력하면 연결이 된다.&lt;/p&gt;

&lt;p&gt;Windows라면 ssh에 접속하는 클라이언트를 사용한다. 필자는 &lt;a href=&quot;https://github.com/iPuTTY/iPuTTY/releases&quot;&gt;iPutty&lt;/a&gt;를 사용중이다. 호스트 이름에 &lt;code class=&quot;highlighter-rouge&quot;&gt;{id}@{ip}&lt;/code&gt;를 입력하고 포트도 바꿔놨다면 그 옆에 입력한다. 이제 “열기”를 누르면 쉘이 켜진다.&lt;/p&gt;

&lt;p&gt;(별다른 설정을 안해놨다면 같은 네트워크에 접속되어있을 때만 연결이 가능하다)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Using username &quot;{id}&quot;,
{id}@{ip}'s password:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 {passwd}를 입력하면 로그인이 되면서 서버 쉘을 사용할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Welcome to Ubuntu 18.04 LTS (GNU/Linux 3.10.49-g5ae7f00 aarch64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

Ubuntu 18.04 LTS [running via Linux Deploy]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><category term="Linux" /><summary type="html">모바일 기기는 전력 소모가 적고 성능도 무난하기 때문에 소형 프로젝트를 돌릴 만한 서버로 적합하다. 루팅된 개인 모바일 안드로이드 기기를 개인 리눅스 서버로 탈바꿈하는 과정을 정리해보았다.</summary></entry><entry><title type="html">\[픽셀 아트\] 자화상</title><link href="http://localhost:4000/pixel%20art/pixelart/" rel="alternate" type="text/html" title="\[픽셀 아트\] 자화상" /><published>2020-03-28T00:00:00+09:00</published><updated>2020-03-28T00:00:00+09:00</updated><id>http://localhost:4000/pixel%20art/pixelart</id><content type="html" xml:base="http://localhost:4000/pixel%20art/pixelart/">&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;http://localhost:4000/assets/img/pixel_art/me.jpg&quot; width=&quot;70%&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;나를 그려보았다. 손을 흔들고 있는 왼손은 뭔가 애매하지만 커피잔을 들고 있는 오른손이 잘 전달된다.&lt;/p&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><category term="pixel art" /><summary type="html"></summary></entry><entry><title type="html">리눅스 업타임</title><link href="http://localhost:4000/linux/system/uptime/" rel="alternate" type="text/html" title="리눅스 업타임" /><published>2020-03-28T00:00:00+09:00</published><updated>2020-03-28T00:00:00+09:00</updated><id>http://localhost:4000/linux/system/uptime</id><content type="html" xml:base="http://localhost:4000/linux/system/uptime/">&lt;p&gt;리눅스 서버의 업타임을 확인할 때 기본적으로는&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ uptime (-p)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;하면 서버가 부팅된 후 유지된 시간을 쉘에 출력한다.&lt;/p&gt;

&lt;p&gt;나는 Python으로 이를 확인해야 했기에, &lt;code class=&quot;highlighter-rouge&quot;&gt;subprocss&lt;/code&gt; 모듈을 사용하여 저 명령어를 쉘에 직접 입력해서 결과를 얻으려고 했었는데, 구글링하다가 더 쉬운 방법을 찾아냈다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_uptime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/proc/uptime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;uptime_seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uptime_seconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;바로 &lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/uptime&lt;/code&gt;의 첫 번째 값을 확인하는 것인데, proc manpage에서는 다음과 같이 설명한다:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ man proc
...
/proc/uptime
	This file contains two numbers: the uptime of the system (seconds),
	and the amount of time spent in idle process (seconds).
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그러면 이 업타임은 정확히 어떻게 측정되는 것일까? &lt;a href=&quot;https://unix.stackexchange.com/questions/275907/on-linux-when-does-uptime-start-counting-from&quot;&gt;이 글&lt;/a&gt;과 확인해본 리눅스 커널 코드에 의하면,  &lt;a href=&quot;https://github.com/torvalds/linux/blob/master/fs/proc/uptime.c&quot;&gt;fs/proc/uptime.c&lt;/a&gt;에서 찾을 수 있는&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;proc_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;uptime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uptime_proc_fops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가 proc 파일시스템에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;uptime&lt;/code&gt;을 갱신하는데, 아직 확인해보지는 않았지만 결국 &lt;a href=&quot;https://github.com/torvalds/linux/blob/master/kernel/time/timekeeping.c&quot;&gt;kernel/time/timekeeping.c&lt;/a&gt;가 계산한다고 한다.&lt;/p&gt;

&lt;p&gt;결론적으로는 &lt;code class=&quot;highlighter-rouge&quot;&gt;uptime&lt;/code&gt;의 카운팅은 커널이 초기화된 직후 시작된다. 이 값은 리눅스 커널에서 계산할 수 있는 가장 정확하고 낮은 레벨의 업타임인 셈이다.&lt;/p&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><category term="uptime" /><category term="proc" /><summary type="html">리눅스 서버의 업타임을 확인할 때 기본적으로는</summary></entry><entry><title type="html">리눅스 x64 호출규약</title><link href="http://localhost:4000/system/x64callconv/" rel="alternate" type="text/html" title="리눅스 x64 호출규약" /><published>2019-10-31T00:00:00+09:00</published><updated>2019-10-31T00:00:00+09:00</updated><id>http://localhost:4000/system/x64callconv</id><content type="html" xml:base="http://localhost:4000/system/x64callconv/">&lt;p&gt;&lt;strong&gt;x64 Linux Calling Convention&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;스택 메모리에서 서브루틴은 호출자의 아래쪽으로 생성된다.&lt;/li&gt;
  &lt;li&gt;인자는 순서대로 rdi, rsi, rdx, r8, r9, r10 레지스터를 통해 전달된다. 6번째 이후의 인자는 32비트 호출 규약과 동일하게 rbp 위 함수의 return address 위에 쌓인다.&lt;/li&gt;
  &lt;li&gt;rax 레지스터는 서브루틴의 리턴값을 전달한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;예를 통해 직접 과정을 따라가보는 것이 가장 이해하기 좋다.&lt;/p&gt;

&lt;h2 id=&quot;예&quot;&gt;예&lt;/h2&gt;

&lt;p&gt;단순하게 두 수를 더해서 다른 변수에 저장하는 c코드를 작성해보았다:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;를 다음과 같이 64비트 컴파일을 하고 gdb로 확인해보자.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gcc &lt;span class=&quot;nt&quot;&gt;-m64&lt;/span&gt; add.c &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; add
gdb add
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그러면 아래와 같은 어셈블리 코드를 볼 수 있는데 main의 시작 지점부터 어셈블리 instruction을 한 단계씩 실행시켜서 메모리와 레지스터 정보를 확인하면 아래와 같은 과정을 그려볼 수 있다. 모바일 환경에서는 잘려서 보이니 데스크탑 환경으로 보자.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;메모리를 표로 그렸는데, 기본적으로 한 칸은 8바이트이지만 movl과 같이 4바이트 단위로 쪼개지는 instruction이 발생할 경우 예외적으로 4바이트 띄어서 표현했다.&lt;/li&gt;
  &lt;li&gt;rip는 레지스터 표가 아닌, 왼쪽에 어셈블리 코드에 화살표로 나타냈고, rsp와 rbp는 메모리 표에 위치를 나타낼 수 있을 때 메모리에 표시했다.&lt;/li&gt;
&lt;/ul&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/swiper/css/swiper.min.css&quot; /&gt;

&lt;script src=&quot;https://unpkg.com/swiper/js/swiper.min.js&quot;&gt;&lt;/script&gt;

&lt;style&gt;
.swiper-slide{
display:flex;
justify-content:center;
}
&lt;/style&gt;

&lt;div class=&quot;swiper-container&quot;&gt;
&lt;div class=&quot;swiper-wrapper&quot;&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
-&amp;gt; 0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
-&amp;gt; 0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
-&amp;gt; 0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
-&amp;gt; 0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
-&amp;gt; 0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
-&amp;gt; 0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
-&amp;gt; 0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
-&amp;gt; 0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
-&amp;gt; 0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
-&amp;gt; 0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
-&amp;gt; 0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
-&amp;gt; 0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
-&amp;gt; 0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
-&amp;gt; 0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
-&amp;gt; 0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
-&amp;gt; 0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
-&amp;gt; 0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
-&amp;gt; 0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
-&amp;gt; 0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
-&amp;gt; 0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
-&amp;gt; 0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
-&amp;gt; 0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;swiper-pagination&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
new Swiper('.swiper-container',{
pagination : {
	el: '.swiper-pagination',
	type:'progressbar',
}
});
&lt;/script&gt;

&lt;h2 id=&quot;관련된-assembly-instructions&quot;&gt;관련된 Assembly Instructions&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;push Reg&lt;/code&gt;: rsp를 8만큼 감소시키고 &lt;code class=&quot;highlighter-rouge&quot;&gt;mov Reg, (%rsp)&lt;/code&gt;한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pop Reg&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;mov (%rsp), Reg&lt;/code&gt; 후 rsp를 8 증가시킨다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;call Dest&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;push 다음 인스트럭션&lt;/code&gt; 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;mov Dest, %rip&lt;/code&gt;한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ret&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;pop %rip&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;leave&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;mov %rsp, %rbp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><summary type="html">x64 Linux Calling Convention</summary></entry><entry><title type="html">리눅스 x86 호출규약</title><link href="http://localhost:4000/system/x86callconv/" rel="alternate" type="text/html" title="리눅스 x86 호출규약" /><published>2019-10-30T00:00:00+09:00</published><updated>2019-10-30T00:00:00+09:00</updated><id>http://localhost:4000/system/x86callconv</id><content type="html" xml:base="http://localhost:4000/system/x86callconv/">&lt;p&gt;32비트 리눅스의 호출 규약Calling Convention에 대해서 알아보자.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;스택 메모리에서 서브루틴은 호출자의 아래쪽으로 생성된다.&lt;/li&gt;
  &lt;li&gt;eax 레지스터로 리턴값을 전달한다.&lt;/li&gt;
  &lt;li&gt;ebp 레지스터 위에 함수의 return address가 있고, 그 위에 인자argument가 쌓여있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;예&quot;&gt;예&lt;/h2&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;를 다음과 같이 32비트 컴파일을 하고 gdb로 확인해보자.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gcc &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; add.c &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; add
gdb add
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;add를 실행하는 과정을 쪼개서 과정을 표현해보았다(가로가 긴 화면에서 보는 것을 권장한다). 메모리를 한 열이 4바이트인 표로 그렸다. eip는 레지스터 표가 아닌 왼쪽에 어셈블리 코드에 화살표로 나타냈고, esp와 ebp는 메모리 표에 위치를 나타낼 수 있을 때 메모리에 표시했다.&lt;/p&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/swiper/css/swiper.min.css&quot; /&gt;

&lt;script src=&quot;https://unpkg.com/swiper/js/swiper.min.js&quot;&gt;&lt;/script&gt;

&lt;style&gt;
.swiper-slide{
display:flex;
justify-content:center;
}
&lt;/style&gt;

&lt;div class=&quot;swiper-container&quot;&gt;
&lt;div class=&quot;swiper-wrapper&quot;&gt;

&lt;!-- slide 1  --&gt;
&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
-&amp;gt; 0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
-&amp;gt; 0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp,esp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;


&lt;/div&gt;


&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
-&amp;gt; 0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;


&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
-&amp;gt; 0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;/div&gt;


&lt;/div&gt;


&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
-&amp;gt; 0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;br /&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
-&amp;gt; 0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;


&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
-&amp;gt; 0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;


&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
-&amp;gt; 0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
-&amp;gt; 0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;


&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
-&amp;gt; 0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;ebp,esp&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;


&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
-&amp;gt; 0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;ebp,esp&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
-&amp;gt; 0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;ebp,esp&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
-&amp;gt; 0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;ebp,esp&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
-&amp;gt; 0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
-&amp;gt; 0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
-&amp;gt; 0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
-&amp;gt; 0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
-&amp;gt; 0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
-&amp;gt; 0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp,esp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
-&amp;gt; 0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;swiper-pagination&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
new Swiper('.swiper-container',{
pagination : {
	el: '.swiper-pagination',
	type:'progressbar',
}
});
&lt;/script&gt;

&lt;h2 id=&quot;관련된-assembly-instructions&quot;&gt;관련된 Assembly Instructions&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;push Reg&lt;/code&gt;: esp를 4 감소시키고 &lt;code class=&quot;highlighter-rouge&quot;&gt;mov Reg, (%esp)&lt;/code&gt;한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pop Reg&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;mov (%esp), Reg&lt;/code&gt; 후 esp를 4 증가시킨다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;call Dest&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;push 다음 인스트럭션&lt;/code&gt; 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;mov Dest, %eip&lt;/code&gt;한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ret&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;pop %eip&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;leave&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;mov %esp, %ebp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><summary type="html">32비트 리눅스의 호출 규약Calling Convention에 대해서 알아보자.</summary></entry><entry><title type="html">출결 제도에 관한 생각</title><link href="http://localhost:4000/scribbles/%EC%B6%9C%EC%84%9D/" rel="alternate" type="text/html" title="출결 제도에 관한 생각" /><published>2019-10-30T00:00:00+09:00</published><updated>2019-10-30T00:00:00+09:00</updated><id>http://localhost:4000/scribbles/%EC%B6%9C%EC%84%9D</id><content type="html" xml:base="http://localhost:4000/scribbles/%EC%B6%9C%EC%84%9D/">&lt;p&gt;대학에 다니면서 아침잠이 급격하게 늘어나면서 오전 강의에 늦거나 안 가는 일이 많다. 그런데 늦게 일어나더라도 출석체크가 있는 수업에는 가지 않고 없는 수업에는 가게 된다. 이 생각의 흐름이 신기해서 쪼개서 정리해보았다!&lt;/p&gt;

&lt;h3 id=&quot;출석을-부르는-강의&quot;&gt;출석을 부르는 강의&lt;/h3&gt;

&lt;p&gt;출결 제도는 학생들의 수업 참여율을 강제하기 위해서 도입한 시스템이다. 그러나 이미 결석이 확실시되면 그 행위를 설명하기 위해 수업을 가지 않게 된다. 수업을 들었는데 결석 처리가 된다면 매우 기분이 나쁘기 때문에.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;잠이든 식사든 모종의 이유로 수업이 이미 시작했고 나는 그 자리에 없다.&lt;/li&gt;
  &lt;li&gt;그 수업에서는 이미 출석을 불렀을 것이다.&lt;/li&gt;
  &lt;li&gt;결석을 한 행위가 아까워서, 그리고 그것을 설명하기 위해 수업을 가지 않는다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;즉, 수업에 안 가는 것을 결석 처리의 보상으로 해석된다.&lt;/p&gt;

&lt;h3 id=&quot;출석을-부르지-않는-강의&quot;&gt;출석을 부르지 않는 강의&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;수업이 이미 시작되었고 나는 그 자리에 없다.&lt;/li&gt;
  &lt;li&gt;수업에서 얻을 수 있는 것들을 놓치는 것이 아깝다.&lt;/li&gt;
  &lt;li&gt;늦었더라도 수업에 간다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;분명 두 강의의 차이는 출석을 성적에 반영하는지에 대한 여부임에도 불구하고 생각의 초점이 달라 기대했던 결과와 완전히 반대로 된 결과가 나타난다.&lt;/p&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><summary type="html">대학에 다니면서 아침잠이 급격하게 늘어나면서 오전 강의에 늦거나 안 가는 일이 많다. 그런데 늦게 일어나더라도 출석체크가 있는 수업에는 가지 않고 없는 수업에는 가게 된다. 이 생각의 흐름이 신기해서 쪼개서 정리해보았다!</summary></entry><entry><title type="html">Ubuntu 18.04 한글 입력 설정</title><link href="http://localhost:4000/linux/%EC%9A%B0%EB%B6%84%ED%88%AC-%ED%95%9C%EA%B8%80/" rel="alternate" type="text/html" title="Ubuntu 18.04 한글 입력 설정" /><published>2019-10-24T00:00:00+09:00</published><updated>2019-10-24T00:00:00+09:00</updated><id>http://localhost:4000/linux/%EC%9A%B0%EB%B6%84%ED%88%AC-%ED%95%9C%EA%B8%80</id><content type="html" xml:base="http://localhost:4000/linux/%EC%9A%B0%EB%B6%84%ED%88%AC-%ED%95%9C%EA%B8%80/">&lt;p&gt;항상 우분투를 설치할 때마다 한글 설정을 하는 문서를 찾기가 번거롭다. 그동안 내가 찾은 설정 방법을 정리하면서 관련 설정을 하는 많은 사람들에게 도움이 되었으면 좋겠다.&lt;/p&gt;

&lt;h2 id=&quot;uim-패키지-설정&quot;&gt;uim 패키지 설정&lt;/h2&gt;

&lt;p&gt;Ubuntu 18.04에서 기본으로 지원하는 입력기는 iBus인데, 한글 입력이 잘 되지 않아서 여러 다른 입력기를 시도해본 결과 uim이 가장 안정적이다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;uim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;검색을 통해 언어 지원(Language Support)를 열어 언어(language) 탭에 키보드 입력기를 iBus에서 uim으로 바꾼다. 이제 나머지 입력기는 지워도 무관하다.&lt;/p&gt;

&lt;h2 id=&quot;한글-한자-키맵&quot;&gt;한글, 한자 키맵&lt;/h2&gt;
&lt;p&gt;키보드의 한영키를 우분투에서는 기본적으로 Alt로 인식한다. 따라서 한/영키로 바꿔줄 수 있는데 방법은 크게 다음 &lt;strong&gt;세 가지&lt;/strong&gt;가 있다. 가장 쉽고 추천하는 방법은 첫 번째의 gnome-tweak-tool를 이용한 방법이다.&lt;/p&gt;

&lt;h3 id=&quot;gnome-tweak-tool&quot;&gt;gnome-tweak-tool&lt;/h3&gt;

&lt;p&gt;현재 우분투 18.04가 사용하고 있는 gnome이라는 데스크탑 환경의 테마를 변경할 때 주로 사용하는 패키지이다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;gnome-tweak-tool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;설치가 되면 Tweaks를 열어 Keyboard &amp;amp; Mouse 탭 - Additional Layout Options - Korean Hangul/Hanja Keys - Right Alt as Hangul, right Ctrl as Hanja 체크박스를 활성화해주고 모두 닫는다.&lt;/p&gt;

&lt;h3 id=&quot;altwin&quot;&gt;altwin&lt;/h3&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vim /usr/share/X11/xkb/symbols/altwin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;symbols[Group1] = [ Alt_R, Meta_R ]&lt;/code&gt;의 값을 다음과 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Hangul&lt;/code&gt;로 바꿔준다:&lt;/p&gt;

&lt;div class=&quot;language-cs highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Meta is mapped to second level of Alt.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;partial&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modifier_keys&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xkb_symbols&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;meta_alt&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LALT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Alt_L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Meta_L&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RALT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Group1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;TWO_LEVEL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;symbols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Group1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Hangul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;modifier_map&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mod1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Alt_L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Alt_R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Meta_L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Meta_R&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  modifier_map Mod4 {};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;xmodmap&quot;&gt;xmodmap&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xmodmap &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'remove mod1 = Alt_R'&lt;/span&gt;
xmodmap &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'keycode 108 = Hangul'&lt;/span&gt;

xmodmap &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'remove control = Control_R'&lt;/span&gt;
xmodmap &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'keycode 105 = Hangul_Hanja'&lt;/span&gt;

xmodmap &lt;span class=&quot;nt&quot;&gt;-pke&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ~/.Xmodmap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;를 순서대로 터미널에 입력한다. 문제는 이 설정이 재부팅을 했을 때 유지가 되지 않는다는 점이다. 적어도 필자의 환경에서는 그랬다. 이를 해결하기 위해서는&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;vim ~/.xinitrc
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(vim이 없다면 다른 텍스트 에디터를 사용해도 무관하다) 를 열어&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xmodmap .Xmodmap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;를 끝에 추가해주면 부팅할때마다 저장된 Xmodmap을 불러올 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;uim-설정&quot;&gt;uim 설정&lt;/h2&gt;

&lt;p&gt;이제 추가한 한영키를 uim에서 한글 입력기를 키고 끄는 키로 추가하면 된다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Global Settings에서 Specify Default IM에 체크하고 Default input method에 Byeoru, Enabled input methods에 &lt;strong&gt;Byeoru만&lt;/strong&gt; 추가한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Byeoru key bindings 1에서 [Byeoru] on과 [Byeoru] off에 한영키만 추가한다. 설정이 잘 되면 &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;hangul&quot;&lt;/code&gt;만 남아있다.  위의 설정을 했는데도 만약에 한영키가 인식이 안된다면, 시스템을 재시작해보고 시도해본다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><category term="uim" /><summary type="html">항상 우분투를 설치할 때마다 한글 설정을 하는 문서를 찾기가 번거롭다. 그동안 내가 찾은 설정 방법을 정리하면서 관련 설정을 하는 많은 사람들에게 도움이 되었으면 좋겠다.</summary></entry><entry><title type="html">시스템 프로그래밍 노트</title><link href="http://localhost:4000/lecture%20notes/cover/" rel="alternate" type="text/html" title="시스템 프로그래밍 노트" /><published>2019-10-22T00:00:00+09:00</published><updated>2019-10-22T00:00:00+09:00</updated><id>http://localhost:4000/lecture%20notes/cover</id><content type="html" xml:base="http://localhost:4000/lecture%20notes/cover/">&lt;p&gt;KAIST CS230 fall 2019 수업을 들으면서 내용을 요약한 노트입니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;/lecturenotes/시스템프로그래밍/note1&quot;&gt;기본 표현 단위와 정수 표현&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/lecturenotes/시스템프로그래밍/note2&quot;&gt;실수&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/lecturenotes/시스템프로그래밍/note3&quot;&gt;어셈블리의 기본&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/lecturenotes/시스템프로그래밍/note4&quot;&gt;상태 코드&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/lecturenotes/시스템프로그래밍/note5&quot;&gt;함수와 스택 메모리&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/lecturenotes/시스템프로그래밍/note6&quot;&gt;배열과 구조체, 그리고 실수&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;출처&quot;&gt;출처&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;KAIST CS230 fall 2019 Syststem Programming slides&lt;/li&gt;
  &lt;li&gt;Computer Systems: A Programmer’s Perspective 3rd edition&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><summary type="html">KAIST CS230 fall 2019 수업을 들으면서 내용을 요약한 노트입니다.</summary></entry><entry><title type="html">시스템 프로그래밍 노트 1 - 기본 표현 단위와 정수 표현</title><link href="http://localhost:4000/lecture%20notes/note1/" rel="alternate" type="text/html" title="시스템 프로그래밍 노트 1 - 기본 표현 단위와 정수 표현" /><published>2019-10-22T00:00:00+09:00</published><updated>2019-10-22T00:00:00+09:00</updated><id>http://localhost:4000/lecture%20notes/note1</id><content type="html" xml:base="http://localhost:4000/lecture%20notes/note1/">&lt;h2 id=&quot;1-기본-표현-단위&quot;&gt;1. 기본 표현 단위&lt;/h2&gt;

&lt;p&gt;모든 정보의 최소 표현 단위는 비트이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;bit : 0,1&lt;/li&gt;
  &lt;li&gt;byte: 여덟 개의 bit를 묶어서 부른다. 이진수로는 00000000~11111111, 십진수로는 0~255, 십육진수로는 00~ff로 표현된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;11-비트-연산자&quot;&gt;1.1. 비트 연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;C에서 사용하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt;는 논리 연산자로, 0을 거짓, 나머지를 모두 참으로 대응한다는 점에서 큰 차이가 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&lt;/code&gt;의 경우 왼쪽을 0으로 채운다. 반면 논리 연산자에서는 왼쪽을 가장 중요한 비트most siginificant bit로 채운다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-정수&quot;&gt;2. 정수&lt;/h2&gt;

&lt;p&gt;크게 unsigned와 Two’s Complement로 구분할 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;21-unsigned&quot;&gt;2.1. unsigned&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;언제나 0보다 크거나 같은 수들을 뜻한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;단순히 이진수 표현을 한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;B2U(X) = \sum _{i=0} ^{w-1} x_i \cdot 2^i&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;0부터 $2^w -1$&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;22-twos-complement&quot;&gt;2.2. Two’s Complement&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;가장 왼쪽에 있는 비트가 부호 비트로, 0이면 양수, 1이면 음수를 뜻한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;B2T(X) = -x_{w-1} \cdot 2^{w-1} + \sum _{i=0} ^{w-2} x_i \cdot 2^i&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;$-2^{w-1}$부터 $2^{w-1} -1$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;-1을 표현하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;111...11&lt;/code&gt;이다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;23-변환&quot;&gt;2.3. 변환&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;c에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;(int)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;(signed int)&lt;/code&gt; 변환casting을 말하는 것이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Two’s Complement 기준 양수 영역은 그대로&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Two’s Complement 기준 음수 영역은 unsigned의 큰 양수 영역으로 그대로 옮겨진다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;$ U2T = B2T \circ U2B$, $T2U = B2U \circ T2B$. 어려울 건 없고 그냥 &lt;strong&gt;같은 비트 표현을 공유한다&lt;/strong&gt;고 생각하면 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;실제 언어에서는 암시된 변환implicit casting을 허용한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// same as tx = (int) ux;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;uy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// same as uy = (unsigned) ty;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;두 가지 표현이 섞여있으면 암시적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;unsigned&lt;/code&gt;로 변환한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;24-확장축소&quot;&gt;2.4. 확장/축소&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;확장의 경우, &lt;code class=&quot;highlighter-rouge&quot;&gt;signed&lt;/code&gt;일 때 부호 비트를 앞에다가 붙인다. 확장을 하는 상황은 다음과 같다:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15213&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0xc493&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// 0xffffc493     &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;축소는 그 수가 양쪽 영역에 모두 포함되어 있으면 확장의 역변환이다. 그렇지 않다면, 예를 들어 int를 short로 바꾸는 경우에 mod 0x10000한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;25-덧셈&quot;&gt;2.5. 덧셈&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;$UAdd_w (u,v) = u+v \mod 2^w $&lt;/li&gt;
  &lt;li&gt;$TAdd_w$는 $UAdd_w$와 비트 단위에서 동일하다.
    &lt;ul&gt;
      &lt;li&gt;즉, $TAdd_w (u,v) = U2T(UAdd_w (T2U(u), T2U(v)))$&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;26-곱셈&quot;&gt;2.6. 곱셈&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;$ UMult_w (u,v) = uv \mod 2^w $&lt;/li&gt;
  &lt;li&gt;$TMult_w$는 $UMult_w$와 비트 단위에서 동일하다. (증명 가능)
    &lt;ul&gt;
      &lt;li&gt;즉, $TMult_w (u,v) = U2T_w (UMult_w (T2U (u), T2U(v))) $&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;27-bitwise-shift&quot;&gt;2.7. Bitwise Shift&lt;/h3&gt;

&lt;h4 id=&quot;271-left-shift&quot;&gt;2.7.1. Left Shift&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;u &amp;lt;&amp;lt; k&lt;/code&gt;는 $u \times 2^k$와 동일하다.&lt;/li&gt;
  &lt;li&gt;앞에다가 0을 k개 붙인 후 나머지 비트는 버린다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;272-right-shift&quot;&gt;2.7.2. Right Shift&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;unsigned는 앞에 k개의 0비트를 넣으면서 오른쪽으로 밀어버린다.
    &lt;ul&gt;
      &lt;li&gt;반올림 그런거 없고 그냥 버린다. 수학적으로는 $\lfloor x / 2^k \rfloor$.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;signed는 앞에 k개의 부호 비트를 넣으면서 오른쪽으로 밀어버린다.
    &lt;ul&gt;
      &lt;li&gt;x가 0보다 크거나 같을 때는 똑같이 버린다.&lt;/li&gt;
      &lt;li&gt;x가 음수이면 $\lfloor (x+2^k -1) / 2^k \rfloor $의 형태로 계산한다. 이는 어림 하는 방향을 0으로 맞추기 위함이다. $x$가 $2^k$의 배수이면 상관이 없지만, 그렇지 않으면 1이 더해져서 올림이 된다. 궁극적으로 $\lceil x / 2^k \rceil$을 비트 레벨에서 구현한 것과 같다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-byte-ordering&quot;&gt;3. Byte Ordering&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;메모리를 처리하는 단위를 word라고 하고, 32비트 아키텍쳐는 4바이트, 64비트는 8바이트이다.&lt;/li&gt;
  &lt;li&gt;각 주소에는 바이트가 할당된다. 즉, 그 주소들을 묶어서 처리하는 것.&lt;/li&gt;
  &lt;li&gt;각 C 데이터 타입에 따른 크기는 다음과 같다:&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;데이터 타입&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;32비트&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;64비트&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;x86-64&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;char&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;short&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;int&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;long&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;float&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;double&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;long double&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10/16&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;pointer&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;여러 바이트로 이루어진 단어를 어떻게 메모리에 저장할까? 그 방법에는 두 가지가 있다. 예를 들어 0xdeadbeef를 각 방법에 맞춰 넣는다고 하면
    &lt;ul&gt;
      &lt;li&gt;Big Endian : LSB가 가장 높은 추소, &lt;code class=&quot;highlighter-rouge&quot;&gt;deadbeef&lt;/code&gt;. Sun, PPC Mac, Internet에서 이용한다.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Little Endian&lt;/strong&gt; : LSB가 가장 낮은 주소, &lt;code class=&quot;highlighter-rouge&quot;&gt;efbeadde&lt;/code&gt;. x86, Android, iOS, WIndows의 ARM 프로세서에서 이용한다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;단, 문자열에 대해서는 조심해야 하는게, char의 배열로 취급된다. 그러니까 ‘abcd’를 넣는다면 각 a, b, c, d에 해당하는 아스키코드가 순서대로 저장된다. 마지막 바이트는 널바이트&lt;code class=&quot;highlighter-rouge&quot;&gt;0x00&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><category term="정수" /><category term="byte ordering" /><summary type="html">1. 기본 표현 단위</summary></entry></feed>
<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-05-11T19:18:17+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Three Dash Two Four</title><subtitle>수학과 개발을 오가며</subtitle><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><entry><title type="html">RSA LSB Oracle Attack</title><link href="http://localhost:4000/cryptography/RSA-lsb-oracle-attack/" rel="alternate" type="text/html" title="RSA LSB Oracle Attack" /><published>2020-05-11T00:00:00+09:00</published><updated>2020-05-11T00:00:00+09:00</updated><id>http://localhost:4000/cryptography/RSA-lsb-oracle-attack</id><content type="html" xml:base="http://localhost:4000/cryptography/RSA-lsb-oracle-attack/">&lt;p&gt;암호문을 복호화해서 맨 마지막 비트(least significant bit)를 알려주는 RSA Oracle이 주어졌을 때 적용할 수 있는 공격법이다.&lt;/p&gt;

&lt;h2 id=&quot;어떻게&quot;&gt;어떻게?&lt;/h2&gt;

&lt;p&gt;RSA의 평문(plaintext)을 p, 암호문(ciphertext)을 c라고 놓았을 때, 복호화는 다음과 같이 진행된다:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p \equiv c^d \mod n&lt;/script&gt;

&lt;p&gt;$c\cdot 2^e$를 같은 방식으로 복호화시켜보자.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;(c \cdot 2^e)^d = c^d \cdot 2^{ed} = c^d \cdot 2^{k\phi(n)+1} \equiv 2 c^d \equiv 2p \mod n&lt;/script&gt;

&lt;p&gt;($2^{k\phi(n)+1} \equiv 2 \mod n$이 되는 부분은 편의를 위해 과감히 생략했다. &lt;a href=&quot;https://3-24.github.io/cryptography/RSA/&quot;&gt;RSA를 설명한 글&lt;/a&gt;의 복호화 증명과 완전히 동일하다.)&lt;/p&gt;

&lt;p&gt;즉, RSA Oracle에 $c \cdot 2^e$를 입력하면 2p를 n으로 나눈 나머지를 계산하고 맨 마지막 비트를 알려준다. 평문은 $n$보다 작다고 가정되므로 두 가지 경우를 고려할 수 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;n &amp;lt; 2p &amp;lt; 2n&lt;br /&gt;
2p를 n으로 나눈 나머지는 2p-n으로, n은 언제나 홀수이기 때문에(짝수이면 n의 두 소수 인수 중 하나는 2로 고정되기 때문에 매우 위험한 RSA이므로 사용되지 않는다!) $2p-n$은 홀수이고, LSB는 1이다.&lt;/li&gt;
  &lt;li&gt;0 &amp;lt; 2p &amp;lt; n&lt;br /&gt;
2p를 n으로 나눈 나머지가 2p이기 떄문에 짝수이므로 LSB가 0이다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;똑같은 방식으로 $c \cdot 4^e$를 입력하면 4p를 n으로 나눈 나머지를 계산하고 맨 마지막 비트를 알려준다. 이전 결과에 이어서 총 네 가지 경우로 나눌 수 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;n &amp;lt; 2p &amp;lt; 2n&lt;br /&gt;
1-1. 3n &amp;lt; 4p &amp;lt; 4n : 4p를 n으로 나눈 나머지는 4p-3n으로, LSB가 1이다.&lt;br /&gt;
1-2. 2n &amp;lt; 4p &amp;lt; 3n : 4p를 n으로 나눈 나머지는 4p-2n으로, LSB가 0이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;0 &amp;lt; 2p &amp;lt; n&lt;br /&gt;
2-1. n &amp;lt; 4p &amp;lt; 2n : 4p를 n으로 나눈 나머지는 4p-n으로, LSB가 1이다.&lt;br /&gt;
2-2. 0 &amp;lt; 4p &amp;lt; n : 4p를 n으로 나눈 나머지는 4p로, LSB가 0이다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이렇게 두 번의 입력으로 가능한 p의 범위를 1/4로 줄여놓았다. 이런 식으로 계속 반복하여 가능한 p의 범위를 좁혀나가면 평문을 얻을 수 있다.&lt;/p&gt;

&lt;p&gt;공격 예는 &lt;a href=&quot;https://github.com/ashutosh1206/Crypton/blob/master/RSA-encryption/Attack-LSBit-Oracle/README.md&quot;&gt;https://github.com/ashutosh1206/Crypton/blob/master/RSA-encryption/Attack-LSBit-Oracle/README.md&lt;/a&gt; 에 잘 정리되어 있다.&lt;/p&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><category term="RSA" /><category term="LSB" /><summary type="html">암호문을 복호화해서 맨 마지막 비트(least significant bit)를 알려주는 RSA Oracle이 주어졌을 때 적용할 수 있는 공격법이다.</summary></entry><entry><title type="html">Length Extension Attack</title><link href="http://localhost:4000/cryptography/length-extension-attack-%EB%B3%B5%EC%82%AC%EB%B3%B8/" rel="alternate" type="text/html" title="Length Extension Attack" /><published>2020-04-04T00:00:00+09:00</published><updated>2020-04-04T00:00:00+09:00</updated><id>http://localhost:4000/cryptography/length-extension-attack%20-%20%EB%B3%B5%EC%82%AC%EB%B3%B8</id><content type="html" xml:base="http://localhost:4000/cryptography/length-extension-attack-%EB%B3%B5%EC%82%AC%EB%B3%B8/">&lt;p&gt;Merkle-Damgard 방식의 해시 함수에 대해 적용할 수 있는 공격법이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;공격자가 모르는 메시지 m1의 해시값과 길이를 알고 있을 때, 공격자가 원하는 임의의 m2를 붙인 메시지 m1 + pad(m1) + m2의 해시값을 알 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;어떻게&quot;&gt;어떻게?&lt;/h2&gt;

&lt;p&gt;비밀 메시지 $m_1$이 패딩을 포함해서 단일 블럭으로 이루어져 있다면,&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;hash(m_1) = compress(IV, m_1 \vert\vert pad_1 )&lt;/script&gt;

&lt;p&gt;이 때, 패딩을 포함한 단일 블럭의 메시지 $m_2$에 대하여, $m_3 = m_1 \vert\vert pad_1 \vert\vert m_2$를 고려하고, $Pad(m_3) = m_1 \vert\vert pad_1 \vert\vert m_2 \vert\vert pad_3$로 놓자.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;hash(m_3) = compress(compress(IV,m_1 \vert\vert pad_1 ), m_2 \vert\vert pad_3)
\\= compress(hash(m_1),m_2\vert\vert pad_3)&lt;/script&gt;

&lt;p&gt;이런 식으로 $m_1, m_2$가 단일 블럭이 아니어도, Merkle-Damgard 해시 함수의 특성 상 $hash(m_3)$를 계산할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;예시&quot;&gt;예시&lt;/h2&gt;

&lt;p&gt;예를 들어, 메시지의 인증을 확인하기 위해 MAC(Message Authentication Code)로 다음과 같은 함수를 사용한다고 하자:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;secret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;SECRET!&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# message의 해시 값을 계산
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashlib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hexdigest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 유저가 보낸 message의 mac 시그니처가 해시값과 일치하는지 확인
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;check_auth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usermac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usermac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;어떤 웹사이트에 PHP 리퀘스트를 GET 방식으로 데이터와 시그니처를 다음과 같이 보낼 수 있다고 하자:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user_id=1323&amp;amp;size=large&amp;amp;count=1&amp;amp;flavor=choco
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sign=8ccb1040d76a517033265be77f7b8506
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 때 시그니처의 길이가 32이기 때문에, 16진수 하나당 4비트이므로 128비트이고, 128비트의 출력을 하는 자주 쓰이는 암호학적 해시 함수는 MD5 정도라고 추측할 수 있다.&lt;/p&gt;

&lt;p&gt;이제 공격자가 하고 싶은 것은 flavor를 &lt;code class=&quot;highlighter-rouge&quot;&gt;mintchoco&lt;/code&gt;로 덮는것이라고 하자.&lt;/p&gt;

&lt;p&gt;length extension attack을 적용할 때 문제는 secret의 길이를 모른다는 부분인다. 그냥 짧을 것이라고 추측해서 직접 패딩을 일일이 만들어서 직접 MD5 해시를 계산해서 인증을 시도해보고, 맞으면 secret의 길이가 7임을 알 수 있다.&lt;/p&gt;

&lt;p&gt;따라서 m1의 길이는 51이고 한 글자는 1바이트=8비트이므로, 총 408비트이고, MD5에서 패딩을 만드는 방식에 의하면 pad1은 다음과 같이 형성된다:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1000 0000 0000 0000 0000 0000 0000 0000
0000 0000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;10...0&lt;/code&gt;을 448비트가 될 때까지 채우고&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1000 1001 0001 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;408비트는 이진수로 110011000이므로 little-endian으로 채웠을 때 (총 64비트)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이걸 다 붙여서&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user_id=1323&amp;amp;size=large&amp;amp;count=1&amp;amp;flavor=choco\x80\x00\x00\x00\x00\x98\x01\x00\x00\x00\x00\x00\x00&amp;amp;flavor=mintchoco
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;로 덮는다. 이 때 인증키 sign은&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;compress(8ccb1040d76a517033265be77f7b8506, &quot;&amp;amp;flavor=mintchoco&quot; + pad3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;를 계산해서 얻을 수 있다. 이제 pad3를 계산하고 compress를 md5 algorithm에서 가져와야 하는데..&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;그냥 다른 사람이 만들어놓은 툴을 쓰자(&lt;a href=&quot;https://github.com/iagox86/hash_extender&quot;&gt;hash_extender&lt;/a&gt;).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;직접 하길 원한다면 hash_extender의 README를 읽어보는 것도 괜찮다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./hash_extender -d &quot;user_id=1323&amp;amp;size=large&amp;amp;count=1&amp;amp;flavor=choco&quot; -l 7 -a &quot;&amp;amp;flavor=mintchoco&quot; -s 8ccb1040d76a517033265be77f7b8506 -f md5
Type: md5
Secret length: 7
New signature: aed5d57ec6cb8c79b245d864665b3193
New string: 757365725f69643d313332332673697a653d6c6172676526636f756e743d3126666c61766f723d63686f636f8000000000980100000000000026666c61766f723d6d696e7463686f636f

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;새로 얻은 &lt;code class=&quot;highlighter-rouge&quot;&gt;sign=aed5d57ec6cb8c79b245d864665b3193&lt;/code&gt;이 이제 있다.&lt;/p&gt;

&lt;p&gt;New string을 bytearray로 바꿔서 출력해보면 다음과 같다:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# s는 아까 얻은 New String
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bytearray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fromhex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barr&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;bytearray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;b'user_id=1323&amp;amp;size=large&amp;amp;count=1&amp;amp;flavor=choco&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;x80&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;x00&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;x00&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;x00&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;x00&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;x98&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;x01&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;x00&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;x00&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;x00&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;x00&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;x00&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;x00&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;amp;flavor=mintchoco'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(위에서 직접 손으로 패딩을 계산했던 것이 일치함을 확인할 수 있다!) 어쩄든 결과로 인증을 시도해보자.&lt;/p&gt;

&lt;p&gt;직접 secret을 붙여서 인증 서버 쪽에서 md5를 계산하면 다음과 같을 것이다:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;hashlib&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashlib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;b'SECRET!'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hexdigest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'aed5d57ec6cb8c79b245d864665b3193'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해시 값이 위에서 얻은 &lt;code class=&quot;highlighter-rouge&quot;&gt;sign&lt;/code&gt;과 동일하다!&lt;/p&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><category term="hash function" /><category term="Merkle-Damgard" /><category term="MD5" /><summary type="html">Merkle-Damgard 방식의 해시 함수에 대해 적용할 수 있는 공격법이다.</summary></entry><entry><title type="html">Merkle-Damgard 해시 함수</title><link href="http://localhost:4000/cryptography/Merkle-Damgard/" rel="alternate" type="text/html" title="Merkle-Damgard 해시 함수" /><published>2020-04-03T00:00:00+09:00</published><updated>2020-04-03T00:00:00+09:00</updated><id>http://localhost:4000/cryptography/Merkle-Damgard</id><content type="html" xml:base="http://localhost:4000/cryptography/Merkle-Damgard/">&lt;blockquote&gt;
  &lt;p&gt;collision-resistant한 해시 함수를 만드는 방법&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;MD5(!), SHA1, SHA2 등에 적용된다. (아쉽게도, MD5의 MD는 Message Digest의 약자라고 한다) 그림으로 표현하면 다음과 같다. IV에 메시지 블록1을 압축시키고, 그 출력에 메시지 블록2를 압축시키고 … 이를 반복하여 마지막 메시지 블록을 통과시킨다.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/e/ed/Merkle-Damgard_hash_big.svg/1920px-Merkle-Damgard_hash_big.svg.png&quot; /&gt;
    &lt;figcaption&gt; Figure 1. MD construction의 구조 &lt;/figcaption&gt;
&lt;/div&gt;

&lt;h2 id=&quot;compression-function&quot;&gt;Compression Function&lt;/h2&gt;

&lt;p&gt;compression 함수 $f$를 가정한다. compression 함수라 함은 다음을 의미한다:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;f:\{0,1\}^m \times \{0,1\}^n \to \{0,1\}^m&lt;/script&gt;

&lt;p&gt;즉, m비트와 n비트의 입력을 받아 m비트로 대응시킨다.&lt;/p&gt;

&lt;p&gt;단, 이 $f$는 출력으로부터 두 입력을 아는 것이 어려워야 하며(단방향, one-way) $f(m_1)=f(m_2)$인 서로 다른 $m_1, m_2$를 아는 것도 어려워야 한다(collision-resistant).&lt;/p&gt;

&lt;h2 id=&quot;initialization-vector&quot;&gt;Initialization Vector&lt;/h2&gt;

&lt;p&gt;처음 compression 함수에 들어가는 m비트는 IV이다.&lt;/p&gt;

&lt;h2 id=&quot;merkle-damgard-compliant-padding&quot;&gt;Merkle-Damgard Compliant Padding&lt;/h2&gt;

&lt;p&gt;메시지를 n비트 블록 단위로 쪼개어서 compression 함수에 넣기 때문에 메시지의 길이가 n비트의 단위가 아닐 경우 이를 n비트로 강제로 만드는 과정이 필요하다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Pad : \{0,1\}^* \to \{0,1\}^{n} \cup \{0,1\}^{2n} \cup \cdots&lt;/script&gt;

&lt;p&gt;MD construction의 안전성을 보장하기 위해 이 패딩함수 $Pad$에는 메시지 $M$에 대해 다음과 같은 충분조건이 존재한다:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$Pad(M)$은 $M$으로 시작해야한다.&lt;/li&gt;
  &lt;li&gt;$\lvert M_1\rvert = \lvert M_2 \rvert \implies \lvert Pad(M_1) \rvert = \lvert Pad(M_2) \rvert $&lt;/li&gt;
  &lt;li&gt;$\lvert M_1\rvert  \ne \lvert M_2\rvert  \implies Pad(M_1) $의 마지막 블록 $\ne Pad(M_2)$의 마지막 블록&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;md5의-예시&quot;&gt;MD5의 예시&lt;/h2&gt;

&lt;p&gt;Merkle-Damgard construction이라는 것을 확인하기 위해 알고리즘을 다소 생략했다. 전문(&lt;a href=&quot;https://en.wikipedia.org/wiki/MD5#Pseudocode&quot;&gt;#&lt;/a&gt;)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Note: All variables are unsigned 32 bit and wrap modulo 2^32 when calculating
var int s[64], K[64] // predefined arrays
var int i

// Initialize variables:
var int a0 := 0x67452301   // A
var int b0 := 0xefcdab89   // B
var int c0 := 0x98badcfe   // C
var int d0 := 0x10325476   // D

// Padding 추가
append &quot;1&quot; bit to message    
// Notice: the input bytes are considered as bits strings,
//  where the first bit is the most significant bit of the byte.[50]
append &quot;0&quot; bit until message length in bits ≡ 448 (mod 512)
append original length in bits mod 2^64 to message

// Process the message in successive 512-bit chunks:
for each 512-bit chunk of padded message do
    break chunk into sixteen 32-bit words M[j], 0 ≤ j ≤ 15
    // Initialize hash value for this chunk:
    var int A := a0
    var int B := b0
    var int C := c0
    var int D := d0
    // Main loop:
    for i from 0 to 63 do
        var int F, g
        if 0 ≤ i ≤ 15 then
            F := (B and C) or ((not B) and D)
            g := i
        else if 16 ≤ i ≤ 31 then
            F := (D and B) or ((not D) and C)
            g := (5×i + 1) mod 16
        else if 32 ≤ i ≤ 47 then
            F := B xor C xor D
            g := (3×i + 5) mod 16
        else if 48 ≤ i ≤ 63 then
            F := C xor (B or (not D))
            g := (7×i) mod 16
        // Be wary of the below definitions of a,b,c,d
        F := F + A + K[i] + M[g]  // M[g] must be a 32-bits block
        A := D
        D := C
        C := B
        B := B + leftrotate(F, s[i])
    end for
    // Add this chunk's hash to result so far:
    a0 := a0 + A
    b0 := b0 + B
    c0 := c0 + C
    d0 := d0 + D
end for

var char digest[16] := a0 append b0 append c0 append d0 // (Output is in little-endian)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;따라서 MD5 Merkle-Damgard 해시 함수이다. 여기서 사용한 패딩은 다른 SHA1, SHA2와도 공유하는 방법으로, 과정은 다음과 같다:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;메시지 끝에 1을 붙인다.&lt;/li&gt;
  &lt;li&gt;그 뒤에 비트 mod 512로 448이 될 때까지 0을 붙인다. 그러면 이제 채워야 할 64비트가 남는다.&lt;/li&gt;
  &lt;li&gt;$\lvert M \rvert $를 mod $2^{64}$한 값을 little-endian 64비트 정수가 되도록 채운다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;예를 들어, 메시지가 400비트였다면, 448비트가 될 때까지&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;를 붙이고&lt;/p&gt;

&lt;p&gt;400비트는 이진수로 110010000이기 때문에 little-endian은 하위 바이트가 낮은 주소로 들어와야 하므로,&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0000 1001 0001 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;를 붙여야 한다. 즉, 4000비트 메시지의 패딩은&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 1001 0001 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;를 byte-array로 바꾼 &lt;code class=&quot;highlighter-rouge&quot;&gt;\x80\x00\x00\x00\x00\x00\x09\x10\x00\x00\x00\x00\x00\x00&lt;/code&gt;이다.&lt;/p&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><category term="hash function" /><category term="Merkle-Damgard" /><summary type="html">collision-resistant한 해시 함수를 만드는 방법</summary></entry><entry><title type="html">Linux Deploy에서 부팅 시 스크립트 자동 실행하기</title><link href="http://localhost:4000/linux/linux-android-startup/" rel="alternate" type="text/html" title="Linux Deploy에서 부팅 시 스크립트 자동 실행하기" /><published>2020-03-28T00:00:00+09:00</published><updated>2020-03-28T00:00:00+09:00</updated><id>http://localhost:4000/linux/linux-android-startup</id><content type="html" xml:base="http://localhost:4000/linux/linux-android-startup/">&lt;p&gt;모바일 안드로이드 기기에서 돌리고 있는 리눅스 서버에서 부팅할 때 돌릴 프로그램을 자동으로 실행하면 번거롭게 부팅할 때마다 SSH로 접속해서 프로그램을 실행하는 과정을 생략할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;init-설정&quot;&gt;init 설정&lt;/h2&gt;

&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;http://localhost:4000/assets/img/linux-init.png&quot; width=&quot;50%&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Linux Deploy에서 속성에 들어가 init을 활성화한다.&lt;/p&gt;

&lt;h2 id=&quot;rclocal에서-돌릴-스크립트-추가&quot;&gt;rc.local에서 돌릴 스크립트 추가&lt;/h2&gt;

&lt;p&gt;SSH로 접속한 서버 쉘을 열어서 다음을 입력한다:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd /etc
$ mkdir rc.local
$ cd rc.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(만약 이미 rc.local이 있다면 그냥 &lt;code class=&quot;highlighter-rouge&quot;&gt;cd /etc/rc.local&lt;/code&gt;)을 하면 된다.&lt;/p&gt;

&lt;p&gt;이제 여기서 부팅할 때 실행할 쉘 스크립트 파일을 만든다. 파일 이름 startScript는 다른 이름으로 해도 무관하다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo vim startScript
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 다음은 나의 예시로, 각자 원하는 목적에 맞춰서 쉘 스크립트를 입력해야 한다. 주의해야 할 점은, startScript는 부팅할 때 루트 계정으로 실행된다는 것이다. 따라서 다른 계정의 &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt;에 설정해놓은 환경 변수 등도 적용이 되지 않는다. 내가 원했던 것은 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/workspace/discordbots/run.sh&lt;/code&gt;를 루트 계정이 아닌, 필요한 환경 변수들이 설정된 &lt;code class=&quot;highlighter-rouge&quot;&gt;youngseok&lt;/code&gt; 계정으로 실행하는 것이었고 이는 다음과 같이 작성된다:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
su youngseok &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bash /home/youngseok/workspace/discordbots/run.sh'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이걸 저장하고 서버를 재시작하면 스크립트에 문제가 없다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;startScript&lt;/code&gt;가 실행되는 것을 확인할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; start
Check file system ... done
Mounting the container:
/ ... done
/proc ... done
/sys ... done
(생략됨)
:: Starting services:
startScript ... done
&amp;lt;&amp;lt;&amp;lt; start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><category term="Linux" /><category term="rc.local" /><summary type="html">모바일 안드로이드 기기에서 돌리고 있는 리눅스 서버에서 부팅할 때 돌릴 프로그램을 자동으로 실행하면 번거롭게 부팅할 때마다 SSH로 접속해서 프로그램을 실행하는 과정을 생략할 수 있다.</summary></entry><entry><title type="html">루팅된 안드로이드 기기를 리눅스 서버로 사용하기</title><link href="http://localhost:4000/linux/linux-android/" rel="alternate" type="text/html" title="루팅된 안드로이드 기기를 리눅스 서버로 사용하기" /><published>2020-03-28T00:00:00+09:00</published><updated>2020-03-28T00:00:00+09:00</updated><id>http://localhost:4000/linux/linux-android</id><content type="html" xml:base="http://localhost:4000/linux/linux-android/">&lt;p&gt;모바일 기기는 전력 소모가 적고 성능도 무난하기 때문에 소형 프로젝트를 돌릴 만한 서버로 적합하다. 루팅된 개인 모바일 안드로이드 기기를 개인 리눅스 서버로 탈바꿈하는 과정을 정리해보았다.&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;안드로이드 기기의 루트 권한&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Busybox 앱 설치(&lt;a href=&quot;https://play.google.com/store/apps/details?id=ru.meefik.busybox&amp;amp;hl=en&quot;&gt;#&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Linux Deploy 앱 설치(&lt;a href=&quot;https://play.google.com/store/apps/details?id=ru.meefik.linuxdeploy&amp;amp;hl=en&quot;&gt;#&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;busybox-설치&quot;&gt;Busybox 설치&lt;/h2&gt;

&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;http://localhost:4000/assets/img/linux_deploy/busybox.png&quot; width=&quot;50%&quot; /&gt;
&lt;figcaption&gt; &lt;br /&gt;Figure 1. Busybox 설치&lt;/figcaption&gt;
&lt;/div&gt;

&lt;p&gt;busybox는 리눅스에서 ls, cp 등 자주 사용하는 명령어들만 모아놓은 상자라고 볼 수 있다. 안드로이드 기본 커널에서 제공하는 명령어가 제한적이기 때문에 서버로 사용할 배포판 리눅스를 설치하기 앞서 busybox를 설치해주어야 한다. 해당 앱을 열고 설치를 누르고 루트 권한을 허용해주면 알아서 설치해준다.&lt;/p&gt;

&lt;h2 id=&quot;linux-deploy-설정&quot;&gt;Linux Deploy 설정&lt;/h2&gt;

&lt;p&gt;deploy 앱을 열어 리눅스를 설치하기 전에 기본적인 설정들을 하자.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;http://localhost:4000/assets/img/linux_deploy/linux_deploy_with_number.png&quot; width=&quot;50%&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;figcaption&gt; Figure 2. Linux Deploy 설정&lt;/figcaption&gt;
&lt;/div&gt;

&lt;p&gt;왼쪽 메뉴(1)를 열어 설정에서&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Wakelock 체크 : 기기를 잠금시켰을 때 안드로이드에서 전력 소모를 막기 위해 앱을 종료하거나 느려지게 만드는 기능을 해제한다. 서버로 사용할 목적이기 때문에 필수.&lt;/li&gt;
  &lt;li&gt;자동시작 체크 : 안정정인 기기면 상관없겠지만, 필자의 기기는 가끔씩 아무 이유없이 재부팅된다. 부팅하고 알아서 리눅스 서버가 켜지도록 하는 설정이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;오른쪽 아래에 속성 아이콘(2)을 눌러서&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;배포에서 리눅스 배포판 선택 : Ubuntu&lt;/li&gt;
  &lt;li&gt;사용자 이름, 비밀번호 설정 : 앞으로 이 글에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;{id}&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;{passwd}&lt;/code&gt;로 대체할 것이다.&lt;/li&gt;
  &lt;li&gt;지역화 : en_US.UTF-8&lt;/li&gt;
  &lt;li&gt;SSH 활성화 : 포트도 설정하고 싶다면 바꿔주자. 이 글에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;{port}&lt;/code&gt;로 대체한다. 기본적으로는 22를 사용한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이제 다시 처음 화면으로 돌아가서 오른쪽 위에 메뉴(3)를 열어 설치를 누르면 된다. 꽤 오래 걸리니 조급해하지 말고 밖에 나가서 밀린 설거지나 하고 돌아오자.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;&amp;lt;deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 끝나면 설치가 완료되었다는 뜻이다.&lt;/p&gt;

&lt;h2 id=&quot;ssh-연결&quot;&gt;SSH 연결&lt;/h2&gt;

&lt;p&gt;이제 START 버튼을 눌러 서버를 가동해주자. 화면 위쪽에 있는 아이피를 확인하고 이를 &lt;code class=&quot;highlighter-rouge&quot;&gt;{ip}&lt;/code&gt;로 부르겠다. &lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.0.4&lt;/code&gt; 이런 형태일 것이다. 위에서 설정한 &lt;code class=&quot;highlighter-rouge&quot;&gt;{id}&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;{passwd}&lt;/code&gt;도 여기서 사용된다.&lt;/p&gt;

&lt;p&gt;Mac이나 Linux같이 shell이 제공된다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh {id}@{ip}&lt;/code&gt;를, ssh 포트를 따로 설정했다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh {id}@{ip} -p {port}&lt;/code&gt;를 shell에서 입력하면 연결이 된다.&lt;/p&gt;

&lt;p&gt;Windows라면 ssh에 접속하는 클라이언트를 사용한다. 필자는 &lt;a href=&quot;https://github.com/iPuTTY/iPuTTY/releases&quot;&gt;iPutty&lt;/a&gt;를 사용중이다. 호스트 이름에 &lt;code class=&quot;highlighter-rouge&quot;&gt;{id}@{ip}&lt;/code&gt;를 입력하고 포트도 바꿔놨다면 그 옆에 입력한다. 이제 “열기”를 누르면 쉘이 켜진다.&lt;/p&gt;

&lt;p&gt;(별다른 설정을 안해놨다면 같은 네트워크에 접속되어있을 때만 연결이 가능하다)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Using username &quot;{id}&quot;,
{id}@{ip}'s password:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 {passwd}를 입력하면 로그인이 되면서 서버 쉘을 사용할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Welcome to Ubuntu 18.04 LTS (GNU/Linux 3.10.49-g5ae7f00 aarch64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

Ubuntu 18.04 LTS [running via Linux Deploy]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><category term="Linux" /><summary type="html">모바일 기기는 전력 소모가 적고 성능도 무난하기 때문에 소형 프로젝트를 돌릴 만한 서버로 적합하다. 루팅된 개인 모바일 안드로이드 기기를 개인 리눅스 서버로 탈바꿈하는 과정을 정리해보았다.</summary></entry><entry><title type="html">\[픽셀 아트\] 자화상</title><link href="http://localhost:4000/pixel%20art/pixelart/" rel="alternate" type="text/html" title="\[픽셀 아트\] 자화상" /><published>2020-03-28T00:00:00+09:00</published><updated>2020-03-28T00:00:00+09:00</updated><id>http://localhost:4000/pixel%20art/pixelart</id><content type="html" xml:base="http://localhost:4000/pixel%20art/pixelart/">&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;http://localhost:4000/assets/img/pixel_art/me.jpg&quot; width=&quot;70%&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;나를 그려보았다. 손을 흔들고 있는 왼손은 뭔가 애매하지만 커피잔을 들고 있는 오른손이 잘 전달된다.&lt;/p&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><category term="pixel art" /><summary type="html"></summary></entry><entry><title type="html">리눅스 업타임</title><link href="http://localhost:4000/linux/system/uptime/" rel="alternate" type="text/html" title="리눅스 업타임" /><published>2020-03-28T00:00:00+09:00</published><updated>2020-03-28T00:00:00+09:00</updated><id>http://localhost:4000/linux/system/uptime</id><content type="html" xml:base="http://localhost:4000/linux/system/uptime/">&lt;p&gt;리눅스 서버의 업타임을 확인할 때 기본적으로는&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ uptime (-p)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;하면 서버가 부팅된 후 유지된 시간을 쉘에 출력한다.&lt;/p&gt;

&lt;p&gt;나는 Python으로 이를 확인해야 했기에, &lt;code class=&quot;highlighter-rouge&quot;&gt;subprocss&lt;/code&gt; 모듈을 사용하여 저 명령어를 쉘에 직접 입력해서 결과를 얻으려고 했었는데, 구글링하다가 더 쉬운 방법을 찾아냈다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_uptime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/proc/uptime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;uptime_seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uptime_seconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;바로 &lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/uptime&lt;/code&gt;의 첫 번째 값을 확인하는 것인데, proc manpage에서는 다음과 같이 설명한다:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ man proc
...
/proc/uptime
	This file contains two numbers: the uptime of the system (seconds),
	and the amount of time spent in idle process (seconds).
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그러면 이 업타임은 정확히 어떻게 측정되는 것일까? &lt;a href=&quot;https://unix.stackexchange.com/questions/275907/on-linux-when-does-uptime-start-counting-from&quot;&gt;이 글&lt;/a&gt;과 확인해본 리눅스 커널 코드에 의하면,  &lt;a href=&quot;https://github.com/torvalds/linux/blob/master/fs/proc/uptime.c&quot;&gt;fs/proc/uptime.c&lt;/a&gt;에서 찾을 수 있는&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;proc_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;uptime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uptime_proc_fops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가 proc 파일시스템에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;uptime&lt;/code&gt;을 갱신하는데, 아직 확인해보지는 않았지만 결국 &lt;a href=&quot;https://github.com/torvalds/linux/blob/master/kernel/time/timekeeping.c&quot;&gt;kernel/time/timekeeping.c&lt;/a&gt;가 계산한다고 한다.&lt;/p&gt;

&lt;p&gt;결론적으로는 &lt;code class=&quot;highlighter-rouge&quot;&gt;uptime&lt;/code&gt;의 카운팅은 커널이 초기화된 직후 시작된다. 이 값은 리눅스 커널에서 계산할 수 있는 가장 정확하고 낮은 레벨의 업타임인 셈이다.&lt;/p&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><category term="uptime" /><category term="proc" /><summary type="html">리눅스 서버의 업타임을 확인할 때 기본적으로는</summary></entry><entry><title type="html">리눅스 x64 호출규약</title><link href="http://localhost:4000/system/x64callconv/" rel="alternate" type="text/html" title="리눅스 x64 호출규약" /><published>2019-10-31T00:00:00+09:00</published><updated>2019-10-31T00:00:00+09:00</updated><id>http://localhost:4000/system/x64callconv</id><content type="html" xml:base="http://localhost:4000/system/x64callconv/">&lt;p&gt;&lt;strong&gt;x64 Linux Calling Convention&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;스택 메모리에서 서브루틴은 호출자의 아래쪽으로 생성된다.&lt;/li&gt;
  &lt;li&gt;인자는 순서대로 rdi, rsi, rdx, r8, r9, r10 레지스터를 통해 전달된다. 6번째 이후의 인자는 32비트 호출 규약과 동일하게 rbp 위 함수의 return address 위에 쌓인다.&lt;/li&gt;
  &lt;li&gt;rax 레지스터는 서브루틴의 리턴값을 전달한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;예를 통해 직접 과정을 따라가보는 것이 가장 이해하기 좋다.&lt;/p&gt;

&lt;h2 id=&quot;예&quot;&gt;예&lt;/h2&gt;

&lt;p&gt;단순하게 두 수를 더해서 다른 변수에 저장하는 c코드를 작성해보았다:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;를 다음과 같이 64비트 컴파일을 하고 gdb로 확인해보자.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gcc &lt;span class=&quot;nt&quot;&gt;-m64&lt;/span&gt; add.c &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; add
gdb add
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그러면 아래와 같은 어셈블리 코드를 볼 수 있는데 main의 시작 지점부터 어셈블리 instruction을 한 단계씩 실행시켜서 메모리와 레지스터 정보를 확인하면 아래와 같은 과정을 그려볼 수 있다. 모바일 환경에서는 잘려서 보이니 데스크탑 환경으로 보자.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;메모리를 표로 그렸는데, 기본적으로 한 칸은 8바이트이지만 movl과 같이 4바이트 단위로 쪼개지는 instruction이 발생할 경우 예외적으로 4바이트 띄어서 표현했다.&lt;/li&gt;
  &lt;li&gt;rip는 레지스터 표가 아닌, 왼쪽에 어셈블리 코드에 화살표로 나타냈고, rsp와 rbp는 메모리 표에 위치를 나타낼 수 있을 때 메모리에 표시했다.&lt;/li&gt;
&lt;/ul&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/swiper/css/swiper.min.css&quot; /&gt;

&lt;script src=&quot;https://unpkg.com/swiper/js/swiper.min.js&quot;&gt;&lt;/script&gt;

&lt;style&gt;
.swiper-slide{
display:flex;
justify-content:center;
}
&lt;/style&gt;

&lt;div class=&quot;swiper-container&quot;&gt;
&lt;div class=&quot;swiper-wrapper&quot;&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
-&amp;gt; 0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
-&amp;gt; 0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
-&amp;gt; 0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
-&amp;gt; 0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
-&amp;gt; 0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
-&amp;gt; 0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
-&amp;gt; 0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
-&amp;gt; 0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
-&amp;gt; 0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
-&amp;gt; 0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
-&amp;gt; 0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
-&amp;gt; 0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
-&amp;gt; 0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
-&amp;gt; 0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
-&amp;gt; 0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
-&amp;gt; 0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
-&amp;gt; 0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
-&amp;gt; 0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
-&amp;gt; 0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
-&amp;gt; 0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
-&amp;gt; 0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
   0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp,rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x000000000040050a &amp;lt;+0&amp;gt;:	push   %rbp
   0x000000000040050b &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x000000000040050e &amp;lt;+4&amp;gt;:	sub    $0x10,%rsp
   0x0000000000400512 &amp;lt;+8&amp;gt;:	movl   $0x3,-0xc(%rbp)
   0x0000000000400519 &amp;lt;+15&amp;gt;:	movl   $0x7,-0x8(%rbp)
   0x0000000000400520 &amp;lt;+22&amp;gt;:	mov    -0x8(%rbp),%edx
   0x0000000000400523 &amp;lt;+25&amp;gt;:	mov    -0xc(%rbp),%eax
   0x0000000000400526 &amp;lt;+28&amp;gt;:	mov    %edx,%esi
   0x0000000000400528 &amp;lt;+30&amp;gt;:	mov    %eax,%edi
   0x000000000040052a &amp;lt;+32&amp;gt;:	callq  0x4004f6 &amp;lt;add&amp;gt;
   0x000000000040052f &amp;lt;+37&amp;gt;:	mov    %eax,-0x4(%rbp)
   0x0000000000400532 &amp;lt;+40&amp;gt;:	mov    $0x0,%eax
   0x0000000000400537 &amp;lt;+45&amp;gt;:	leaveq 
-&amp;gt; 0x0000000000400538 &amp;lt;+46&amp;gt;:	retq   
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x00000000004004f6 &amp;lt;+0&amp;gt;:	push   %rbp
   0x00000000004004f7 &amp;lt;+1&amp;gt;:	mov    %rsp,%rbp
   0x00000000004004fa &amp;lt;+4&amp;gt;:	mov    %edi,-0x4(%rbp)
   0x00000000004004fd &amp;lt;+7&amp;gt;:	mov    %esi,-0x8(%rbp)
   0x0000000000400500 &amp;lt;+10&amp;gt;:	mov    -0x4(%rbp),%edx
   0x0000000000400503 &amp;lt;+13&amp;gt;:	mov    -0x8(%rbp),%eax
   0x0000000000400506 &amp;lt;+16&amp;gt;:	add    %edx,%eax
   0x0000000000400508 &amp;lt;+18&amp;gt;:	pop    %rbp
   0x0000000000400509 &amp;lt;+19&amp;gt;:	retq   
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rsp&lt;/td&gt;&lt;td&gt;0x7fffffffe388&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe37c&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe378&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe374&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe370&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe368&lt;/td&gt;&lt;td&gt;0x40052f&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe360&lt;/td&gt;&lt;td&gt;0x7fffffffe380&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe35c&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0x7fffffffe358&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;rdx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rax&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rsi&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rdi&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;rbp&lt;/td&gt;&lt;td&gt;0x400540&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;swiper-pagination&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
new Swiper('.swiper-container',{
pagination : {
	el: '.swiper-pagination',
	type:'progressbar',
}
});
&lt;/script&gt;

&lt;h2 id=&quot;관련된-assembly-instructions&quot;&gt;관련된 Assembly Instructions&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;push Reg&lt;/code&gt;: rsp를 8만큼 감소시키고 &lt;code class=&quot;highlighter-rouge&quot;&gt;mov Reg, (%rsp)&lt;/code&gt;한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pop Reg&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;mov (%rsp), Reg&lt;/code&gt; 후 rsp를 8 증가시킨다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;call Dest&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;push 다음 인스트럭션&lt;/code&gt; 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;mov Dest, %rip&lt;/code&gt;한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ret&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;pop %rip&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;leave&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;mov %rsp, %rbp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><summary type="html">x64 Linux Calling Convention</summary></entry><entry><title type="html">리눅스 x86 호출규약</title><link href="http://localhost:4000/system/x86callconv/" rel="alternate" type="text/html" title="리눅스 x86 호출규약" /><published>2019-10-30T00:00:00+09:00</published><updated>2019-10-30T00:00:00+09:00</updated><id>http://localhost:4000/system/x86callconv</id><content type="html" xml:base="http://localhost:4000/system/x86callconv/">&lt;p&gt;32비트 리눅스의 호출 규약Calling Convention에 대해서 알아보자.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;스택 메모리에서 서브루틴은 호출자의 아래쪽으로 생성된다.&lt;/li&gt;
  &lt;li&gt;eax 레지스터로 리턴값을 전달한다.&lt;/li&gt;
  &lt;li&gt;ebp 레지스터 위에 함수의 return address가 있고, 그 위에 인자argument가 쌓여있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;예&quot;&gt;예&lt;/h2&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;를 다음과 같이 32비트 컴파일을 하고 gdb로 확인해보자.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gcc &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; add.c &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; add
gdb add
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;add를 실행하는 과정을 쪼개서 과정을 표현해보았다(가로가 긴 화면에서 보는 것을 권장한다). 메모리를 한 열이 4바이트인 표로 그렸다. eip는 레지스터 표가 아닌 왼쪽에 어셈블리 코드에 화살표로 나타냈고, esp와 ebp는 메모리 표에 위치를 나타낼 수 있을 때 메모리에 표시했다.&lt;/p&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/swiper/css/swiper.min.css&quot; /&gt;

&lt;script src=&quot;https://unpkg.com/swiper/js/swiper.min.js&quot;&gt;&lt;/script&gt;

&lt;style&gt;
.swiper-slide{
display:flex;
justify-content:center;
}
&lt;/style&gt;

&lt;div class=&quot;swiper-container&quot;&gt;
&lt;div class=&quot;swiper-wrapper&quot;&gt;

&lt;!-- slide 1  --&gt;
&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
-&amp;gt; 0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
-&amp;gt; 0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp,esp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;


&lt;/div&gt;


&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
-&amp;gt; 0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;


&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
-&amp;gt; 0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;/div&gt;


&lt;/div&gt;


&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
-&amp;gt; 0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;br /&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
-&amp;gt; 0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;


&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
-&amp;gt; 0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;


&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
-&amp;gt; 0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
-&amp;gt; 0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;


&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
-&amp;gt; 0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;ebp,esp&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;


&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
-&amp;gt; 0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;ebp,esp&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
-&amp;gt; 0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;ebp,esp&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
-&amp;gt; 0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;ebp,esp&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
-&amp;gt; 0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
-&amp;gt; 0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
-&amp;gt; 0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
-&amp;gt; 0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
-&amp;gt; 0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
-&amp;gt; 0x08048422 &amp;lt;+42&amp;gt;:	leave  
   0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ebp,esp&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;div class=&quot;swiper-slide&quot;&gt;
&lt;div class=&quot;highlighter-rouge&quot; style=&quot;width:70%;&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(gdb) disass main
Dump of assembler code for function main:
   0x080483f8 &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483f9 &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483fb &amp;lt;+3&amp;gt;:	sub    $0x10,%esp
   0x080483fe &amp;lt;+6&amp;gt;:	movl   $0x3,-0xc(%ebp)
   0x08048405 &amp;lt;+13&amp;gt;:	movl   $0x7,-0x8(%ebp)
   0x0804840c &amp;lt;+20&amp;gt;:	pushl  -0x8(%ebp)
   0x0804840f &amp;lt;+23&amp;gt;:	pushl  -0xc(%ebp)
   0x08048412 &amp;lt;+26&amp;gt;:	call   0x80483eb &amp;lt;add&amp;gt;
   0x08048417 &amp;lt;+31&amp;gt;:	add    $0x8,%esp
   0x0804841a &amp;lt;+34&amp;gt;:	mov    %eax,-0x4(%ebp)
   0x0804841d &amp;lt;+37&amp;gt;:	mov    $0x0,%eax
   0x08048422 &amp;lt;+42&amp;gt;:	leave  
-&amp;gt; 0x08048423 &amp;lt;+43&amp;gt;:	ret    
End of assembler dump.
(gdb) disass add
Dump of assembler code for function add:
   0x080483eb &amp;lt;+0&amp;gt;:	push   %ebp
   0x080483ec &amp;lt;+1&amp;gt;:	mov    %esp,%ebp
   0x080483ee &amp;lt;+3&amp;gt;:	mov    0x8(%ebp),%edx
   0x080483f1 &amp;lt;+6&amp;gt;:	mov    0xc(%ebp),%eax
   0x080483f4 &amp;lt;+9&amp;gt;:	add    %edx,%eax
   0x080483f6 &amp;lt;+11&amp;gt;:	pop    %ebp
   0x080483f7 &amp;lt;+12&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:1%&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;width:29%;&quot;&gt;

&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:10%&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:45%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;&lt;/th&gt;
	&lt;th&gt;Address&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;/tbody&gt;
&lt;tr&gt;&lt;td&gt;esp&lt;/td&gt;&lt;td&gt;0xffffd4fc&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f4&lt;/td&gt;&lt;td&gt;0xa&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4f0&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4ec&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e8&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e4&lt;/td&gt;&lt;td&gt;0x7&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4e0&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4dc&lt;/td&gt;&lt;td&gt;0x08048417&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;0xffffd4d8&lt;/td&gt;&lt;td&gt;0xffffd4f8&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;
&lt;table style=&quot;width:100%;display:table;&quot;&gt;
&lt;colgroup&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
	&lt;col span=&quot;1&quot; style=&quot;width:50%;&quot; /&gt;
&lt;/colgroup&gt;

&lt;thead&gt;
	&lt;tr&gt;
	&lt;th&gt;Register&lt;/th&gt;
	&lt;th&gt;Value&lt;/th&gt;
	&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;edx&lt;/td&gt;&lt;td&gt;0x3&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;eax&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;ebp&lt;/td&gt;&lt;td&gt;0x0&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;swiper-pagination&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
new Swiper('.swiper-container',{
pagination : {
	el: '.swiper-pagination',
	type:'progressbar',
}
});
&lt;/script&gt;

&lt;h2 id=&quot;관련된-assembly-instructions&quot;&gt;관련된 Assembly Instructions&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;push Reg&lt;/code&gt;: esp를 4 감소시키고 &lt;code class=&quot;highlighter-rouge&quot;&gt;mov Reg, (%esp)&lt;/code&gt;한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pop Reg&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;mov (%esp), Reg&lt;/code&gt; 후 esp를 4 증가시킨다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;call Dest&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;push 다음 인스트럭션&lt;/code&gt; 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;mov Dest, %eip&lt;/code&gt;한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ret&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;pop %eip&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;leave&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;mov %esp, %ebp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><summary type="html">32비트 리눅스의 호출 규약Calling Convention에 대해서 알아보자.</summary></entry><entry><title type="html">출결 제도에 관한 생각</title><link href="http://localhost:4000/scribbles/%EC%B6%9C%EC%84%9D/" rel="alternate" type="text/html" title="출결 제도에 관한 생각" /><published>2019-10-30T00:00:00+09:00</published><updated>2019-10-30T00:00:00+09:00</updated><id>http://localhost:4000/scribbles/%EC%B6%9C%EC%84%9D</id><content type="html" xml:base="http://localhost:4000/scribbles/%EC%B6%9C%EC%84%9D/">&lt;p&gt;대학에 다니면서 아침잠이 급격하게 늘어나면서 오전 강의에 늦거나 안 가는 일이 많다. 그런데 늦게 일어나더라도 출석체크가 있는 수업에는 가지 않고 없는 수업에는 가게 된다. 이 생각의 흐름이 신기해서 쪼개서 정리해보았다!&lt;/p&gt;

&lt;h3 id=&quot;출석을-부르는-강의&quot;&gt;출석을 부르는 강의&lt;/h3&gt;

&lt;p&gt;출결 제도는 학생들의 수업 참여율을 강제하기 위해서 도입한 시스템이다. 그러나 이미 결석이 확실시되면 그 행위를 설명하기 위해 수업을 가지 않게 된다. 수업을 들었는데 결석 처리가 된다면 매우 기분이 나쁘기 때문에.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;잠이든 식사든 모종의 이유로 수업이 이미 시작했고 나는 그 자리에 없다.&lt;/li&gt;
  &lt;li&gt;그 수업에서는 이미 출석을 불렀을 것이다.&lt;/li&gt;
  &lt;li&gt;결석을 한 행위가 아까워서, 그리고 그것을 설명하기 위해 수업을 가지 않는다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;즉, 수업에 안 가는 것을 결석 처리의 보상으로 해석된다.&lt;/p&gt;

&lt;h3 id=&quot;출석을-부르지-않는-강의&quot;&gt;출석을 부르지 않는 강의&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;수업이 이미 시작되었고 나는 그 자리에 없다.&lt;/li&gt;
  &lt;li&gt;수업에서 얻을 수 있는 것들을 놓치는 것이 아깝다.&lt;/li&gt;
  &lt;li&gt;늦었더라도 수업에 간다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;분명 두 강의의 차이는 출석을 성적에 반영하는지에 대한 여부임에도 불구하고 생각의 초점이 달라 기대했던 결과와 완전히 반대로 된 결과가 나타난다.&lt;/p&gt;</content><author><name>Youngseok Choe</name><email>dev.youngseok@gmail.com</email></author><summary type="html">대학에 다니면서 아침잠이 급격하게 늘어나면서 오전 강의에 늦거나 안 가는 일이 많다. 그런데 늦게 일어나더라도 출석체크가 있는 수업에는 가지 않고 없는 수업에는 가게 된다. 이 생각의 흐름이 신기해서 쪼개서 정리해보았다!</summary></entry></feed>